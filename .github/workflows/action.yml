name: Build and deploy
on:
  push:
    tags:
      - 'v*'
jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    # https://github.com/docker/metadata-action
    steps:
      - name: Clone code
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./src/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  pull_and_deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push
    steps:
      - name: Clone code
        uses: actions/checkout@v3
      - name: Decrypt ansible
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.ANSIBLE_VAULT_KEY }}
          command: "ansible-vault decrypt deploy/vault.env --output deploy/.env"
      - name: Update compose
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPO: ${{ vars.DOCKERHUB_REPO }}
        run: |
          envsubst '$DOCKERHUB_USERNAME,$DOCKERHUB_REPO' < deploy/docker-compose_ci.yaml > deploy/docker-compose.yaml
          rm deploy/docker-compose_ci.yaml
          rm deploy/vault.env

      # Собрать статику
      - name: Set ip Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Collect static
        run: |
          set -a; source .env.example; set +a;
          ./src/manage.py collectstatic -c --no-input
          mv ./src/static ./deploy/

      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          source: "deploy/*"
          target: todolist
          strip_components: 1
      - name: Run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            cd todolist
            docker-compose down
            docker-compose pull
            docker-compose up -d
      - name: Cleanup images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            docker system prune -af
